{
    "name": "Machine Learning Workplace", // Dev Container 的显示名称
    "image": "learn-anything:v4.0-pytorch2.7-py313-gpp15-cu126",  // 直接指定镜像名称和标签（没有 build 就加载现成的，有 build 就重新构建）
    "runArgs": [
        "--gpus=all", // 添加 GPU 支持
        "--shm-size=8g", // 设置共享内存大小
        "--name",
        "my-machine-learning-container" // 手动指定容器名称
        // "--network", "host"  // 使用主机网络模式，而不是默认的桥接网络模式
        // "--privileged"  // 添加特权模式（使容器拥有宿主机的所有权限）
    ],
    "build": {
        // Sets the run context to one level up instead of the .devcontainer folder.
        "context": "..",
        // Update the 'dockerFile' property if you aren't using the standard 'Dockerfile' filename.
        "dockerfile": "Dockerfile",
        "args": {
            // "IMAGE_NAME": "learn-anything", // 指定镜像名称
            // "IMAGE_TAG": "v4.0-pytorch2.7-py313-gpp15-cu129", // 指定镜像标签
            "CONDA_FILE": "Miniconda3-py313_25.5.1-1-Linux-x86_64.sh", // 指定 conda 安装程序名称
            "CONDA_URL": "https://mirrors.tuna.tsinghua.edu.cn/anaconda/miniconda/", // 指定 conda 安装脚本的下载地址
            "BASE_IMAGE_TAG": "12.6.3-cudnn-devel-ubuntu22.04", // 基础镜像标签参数
            "PROXY_URL": "http://host.docker.internal:26561", // 设置代理地址（如果需要）
            "NO_PROXY": "localhost, *.docker.internal", // 设置不使用代理的地址
            "PROXY_CRT": "steamcrt.cer" // 代理证书文件名
        }
        // "network": "host"  // 指定构建镜像时使用主机网络
    },
    // "overrideCommand": false, // 不覆盖默认命令（需要自定义启动命令时使用）
    // Dev Container 会进行对目录挂载与工作区进行默认设置
    //      自动将工作目录挂载到容器内的 /workspaces/<项目名> 路径
    //      自动打开在 /workspaces/<项目名> 目录
    // "workspaceFolder": "/workspaces/${localWorkspaceFolderBasename}",
    "mounts": [ // 将本地目录挂载
        // "source=${localWorkspaceFolder}/,target=/workspaces/${localWorkspaceFolder}/,type=bind",  // 绑定挂载当前目录（机器学习工作区）
        "source=${localWorkspaceFolder}/../,target=/workspaces/,type=bind" // 绑定挂载 Docker 工作区（当前工作区的父目录）
    ],
    "customizations": {
        "vscode": {
            "extensions": [ // 安装容器中需要的 Vscode 扩展
                // Python
                "ms-python.python",
                "ms-toolsai.jupyter",
                "ms-python.autopep8",
                "ms-python.vscode-pylance",
                "mechatroner.rainbow-csv",
                "ms-azuretools.vscode-docker",
                "ms-toolsai.datawrangler",
                // C++
                "MS-CEINTL.vscode-language-pack-zh-hans",
                "ms-vscode.cpptools",
                "ms-vscode.cpptools-extension-pack",
                "ms-vscode.cpptools-themes",
                "ms-vscode.cmake-tools"
            ]
        }
    }
}